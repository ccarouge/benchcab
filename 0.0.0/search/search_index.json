{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"About benchcab","text":"<p><code>benchcab</code> is an evaluation tool for the land surface model CABLE. <code>benchcab</code> is designed to perform set standard simulations with two versions of CABLE. These simulations are then analysed together in modelevaluation.org to assess the scientific strengths and gaps in the two CABLE versions.</p> <p>It is developed and maintained by the CABLE's user community and the ACCESS-NRI.</p> <p>toto</p>"},{"location":"user_guide/","title":"User Guide","text":"<p>In this guide, we will describe:</p> <ul> <li>how to install the package</li> <li>how to use the software, including any requirements</li> <li>the different modes supported by the software</li> </ul> <p><code>benchcab</code> has been designed to work on NCI machine exclusively. It might be extended later on to other systems.</p>"},{"location":"user_guide/#pre-requisites","title":"Pre-requisites","text":"<p>To use <code>benchcab</code>, you need to join the following projects at NCI:</p> <ul> <li>ks32</li> <li>hh5</li> </ul>"},{"location":"user_guide/#installation","title":"Installation","text":"<p>The package is already installed for you in the Conda environments under the hh5 project. You simply need to load the module for the conda environment:</p> <pre><code>   module use /g/data/hh5/public/modules\n   module load conda/analysis3-unstable\n</code></pre> <p>You need to load the module on each new session at NCI on login or compute nodes.</p> <p>Save the module location</p> <p>You should not put any <code>module load</code> or <code>module add</code> commands in your <code>$HOME/.bashrc</code> file. But you can safely store the <code>module use /g/data/hh5/public/modules</code> command in your <code>$HOME/.bashrc</code> file. This means you won't have to type this line again in other sessions you open on Gadi.</p>"},{"location":"user_guide/#usage","title":"Usage","text":"<p><code>benchcab</code> will run the exact same configurations on two CABLE branches specified by the user, e.g. a user branch (with personal changes) against the head of the trunk. The results should be attached with all new tickets.</p> <p>The code will: (i) check out and (ii) build the code branches. Then it will run each executable across N standard science configurations for a given number of sites. It is possible to produce some plots locally from the output produced. But the modelevaluation website can be used for further benchmarking and evaluation.</p>"},{"location":"user_guide/#create-a-work-directory","title":"Create a work directory","text":""},{"location":"user_guide/#choose-a-location","title":"Choose a location","text":"<p>You can run the benchmark from any directory you want under <code>/scratch</code> or <code>/g/data</code>. <code>/scratch</code> is preferred as the data in the run directory does not need to be preserved for a long time. The code will create sub-directories as needed. Please ensure you have enough space to store the CABLE outputs in your directory, at least temporary, until you upload them to modelevaluation.org. You will need about 33GB for the outputs for the <code>forty-two-site</code> experiment (with 8 different science configurations).</p> <p>The HOME directory is unsuitable</p> <p>Do not use your $HOME directory to contain the work directory as it does not have enough space to contain the outputs.</p>"},{"location":"user_guide/#setup-the-work-directory","title":"Setup the work directory","text":"<p>The simplest is to clone an existing work directory with git and then adapt it to your case. Such an example work directory is available on GitHub under the CABLE-LSM organisation. <pre><code>git clone git@github.com:CABLE-LSM/bench_example.git\n</code></pre></p> <p>Once the work directory is cloned, you will need to adapt the <code>config.yaml</code> file to your case. Refer to the description of the options for this file.</p>"},{"location":"user_guide/#run-the-simulations","title":"Run the simulations","text":"<p>Change directory into the cloned example work directory <pre><code>cd bench_example\n</code></pre></p> <p>Warning</p> <p><code>benchcab</code> will yell at you if it cannot find files in the current working directory.</p> <p>Currently, <code>benchcab</code> can only run CABLE for flux sites. To run the flux site tests, run</p> <pre><code>benchcab -f\n</code></pre> <p>The benchmarking will follow the steps:</p> <ol> <li>Checkout both branches. The codes will be stored under <code>src/</code> directory in your work directory. The sub-directories are created automatically.</li> <li>Compile the source code from both branches</li> <li>Setup and launch a PBS job to run the simulations in parallel. When <code>benchcab</code> launches the PBS job, it will print out the job ID to the terminal. You can check the status of the job with <code>qstat</code>.</li> </ol> <p>For help on the available options for <code>benchcab</code>:</p> <pre><code>benchcab -h\n</code></pre>"},{"location":"user_guide/#directory-structure-and-files","title":"Directory structure and files","text":"<p>The following files and directories are created when <code>benchcab -f</code> executes successfully: <pre><code>.\n\u251c\u2500\u2500 benchmark_cable_qsub.sh\n\u251c\u2500\u2500 benchmark_cable_qsub.sh.o&lt;jobid&gt;\n\u251c\u2500\u2500 rev_number-1.log\n\u251c\u2500\u2500 runs\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 site\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 logs\n\u2502       \u2502   \u251c\u2500\u2500 &lt;task&gt;_log.txt\n\u2502       \u2502   \u2514\u2500\u2500 ...\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 outputs\n\u2502       \u2502   \u251c\u2500\u2500 &lt;task&gt;_out.nc\n\u2502       \u2502   \u2514\u2500\u2500 ...\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 tasks\n\u2502           \u251c\u2500\u2500 &lt;task&gt;\n\u2502           \u2502   \u251c\u2500\u2500 cable (executable)\n\u2502           \u2502   \u251c\u2500\u2500 cable.nml\n\u2502           \u2502   \u251c\u2500\u2500 cable_soilparm.nml\n\u2502           \u2502   \u2514\u2500\u2500 pft_params.nml\n\u2502           \u2514\u2500\u2500 ...\n\u2514\u2500\u2500 src\n    \u251c\u2500\u2500 CABLE-AUX\n    \u251c\u2500\u2500 &lt;realisation-0&gt;\n    \u2514\u2500\u2500 &lt;realisation-1&gt;\n</code></pre></p> <p>The <code>benchmark_cable_qsub.sh</code> file is the job script submitted to run the test suite and <code>benchmark_cable_qsub.sh.o&lt;jobid&gt;</code> contains the job's standard output/error stream.</p> <p>The <code>rev_number-*.log</code> file keeps a record of the revision numbers used for each realisation specified in the config file.</p> <p>The <code>src</code> directory contains the source code checked out from SVN for each branch specified in the config file (labelled <code>realisation-*</code> above) and the CABLE-AUX branch.</p> <p>The <code>runs/site</code> directory contains the log files, output files, and tasks for running CABLE. CABLE runs are organised into tasks where a task consists of a branch (realisation), a meteorological forcing, and a science configuration. In the above directory structure, <code>&lt;task&gt;</code> uses the following naming convention: <pre><code>&lt;met_file_basename&gt;_R&lt;realisation_key&gt;_S&lt;science_config_key&gt;\n</code></pre> where <code>met_file_base_name</code> is the base file name of the meteorological forcing file in the FLUXNET dataset, <code>realisation_key</code> is the branch key specified in the config file, and <code>science_config_key</code> identifies the science configuration used.</p> <p>The <code>runs/site/tasks/&lt;task&gt;</code> directory contains the executable and input files for each task.</p> <p>The output files and log files for all tasks are stored in the <code>runs/site/outputs</code> and <code>runs/site/logs</code> directories respectively.</p> <p>Re-running <code>benchcab</code> multiple times in the same working directory</p> <p>We recommend the user to manually delete the generated files when re-running <code>benchcab</code>. Re-running <code>benchcab</code> multiple times in the same working directory is currently not yet supported (see issue CABLE-LSM/benchcab#20). To clean the current working directory, run the following command in the working directory <pre><code>rm benchmark_cable_qsub.sh* rev_number-*; rm -rf runs/ src/\n</code></pre></p>"},{"location":"user_guide/#analyse-the-output-with-modelevaluationorg","title":"Analyse the output with modelevaluation.org","text":"<p>Once the benchmarking has finished running all the simulations, you need to upload the output files to modelevaluation.org:</p> <ol> <li>Open and log into modelevaluation.org</li> <li>Navigate to the <code>NRI Land testing</code> workspace</li> <li>Create a model profile for the two model branches you are using</li> <li>Create a model output and upload the outputs in <code>runs/sites/outputs/</code> under your work directory</li> <li>Launch the analysis</li> </ol>"},{"location":"user_guide/#contacts","title":"Contacts","text":"<p>Please enter your questions as issues on the benchcab repository.</p> <p>Alternatively, you can also post discussions or questions on the ACCESS-Hive forum.</p>"},{"location":"user_guide/config_options/","title":"config.yaml options","text":"<p>Note</p> <p>All keys listed here are required unless stated otherwise.</p>"},{"location":"user_guide/config_options/#technical-details","title":"Technical details","text":"<code>user</code> <p>NCI user ID to find the CABLE branch on SVN and run the simulations.</p> <code>project</code> <p>NCI project ID to charge the simulations to.</p> <code>modules</code> <p>NCI modules to use for compiling CABLE</p>"},{"location":"user_guide/config_options/#simulations-details","title":"Simulations details","text":"<code>realisations</code> <p>Entries for each of the two CABLE branches to use (specified by keys <code>0</code> and <code>1</code>). Each entry contains the following keys:</p> <code>name</code> <p>The base name of the branch on SVN, i.e. relative to:</p> <ul> <li><code>https://trac.nci.org.au/svn/cable</code> for the trunk</li> <li><code>https://trac.nci.org.au/svn/cable/branches/Share</code> for a shared branch</li> <li><code>https://trac.nci.org.au/svn/cable/branches/Users/{user_id}</code> for a user branch</li> </ul> <code>revision</code> The revision number to use for the branch. This key is optional and can be omitted from the config file. By default <code>revision</code> is set to <code>-1</code> which indicates the HEAD of the branch to be used. The user may also explicitly specify <code>-1</code> to use the HEAD of the branch. <code>trunk</code> Boolean value set to <code>True</code> if this branch is the trunk for CABLE. Else set to <code>False</code>. <code>share_branch</code> Boolean value set to <code>True</code> if this branch is under <code>branches/Share</code> in the CABLE SVN repository. Else set to <code>False</code>. <code>patch</code> Branch-specific namelist settings for <code>cable.nml</code>. Settings specified in <code>patch</code> get \"patched\" to the base namelist settings used for both branches. Any namelist settings specified here will overwrite settings defined in the default namelist file and in the science configurations. This means these settings will be set as stipulated in the <code>patch</code> for this branch for all science configurations run by <code>benchcab</code>. The <code>patch</code> key must be a dictionary like data structure that is compliant with the <code>f90nml</code> python package. This key is optional and can be omitted from the config file. By default <code>patch</code> is empty and does not modify the namelist file. <p>Example: <pre><code>realisations: {\n  0: { # head of the trunk\n    name: \"trunk\",\n    revision: -1,\n    trunk: True,\n    share_branch: False,\n},\n  1: { # some development branch\n    name: \"test-branch\",\n    revision: -1,\n    trunk: False,\n    share_branch: False,\n    patch: {\n      cable: {\n        cable_user: {\n          FWSOIL_SWITCH: \"Lai and Ktaul 2000\"\n}\n}\n}\n}\n}\n</code></pre></p> <code>experiment</code> <p>Type of experiment to run. Experiments are defined in the NRI Land testing workspace on modelevaluation.org. This key specifies the met forcing files used in the test suite. To choose from:</p> <ul> <li><code>forty-two-site-test</code>: to run simulations using 42 FLUXNET sites</li> <li><code>five-site-test</code>: to run simulations using 5 FLUXNET sites</li> <li><code>AU-Tum</code>: to run simulations at the Tumbarumba (AU) site</li> <li><code>AU-How</code>: to run simulations at the Howard Spring (AU) site</li> <li><code>FI-Hyy</code>: to run simulations at the Hyytiala (FI) site</li> <li><code>US-Var</code>: to run simulations at the Vaira Ranch-Ione (US) site</li> <li><code>US-Whs</code>: to run simulations at the Walnut Gulch Lucky Hills Shrub (US) site</li> </ul> <code>science_configurations</code> <p>User defined science configurations. This key is optional and can be omitted from the config file. Science configurations that are specified here will replace the default science configurations.</p> <p>Example: <pre><code>science_configurations: {\n  sci0: {\n    cable: {\n      cable_user: {\n        GS_SWITCH: \"medlyn\",\n        FWSOIL_SWITCH: \"Haverd2013\"\n}\n}\n},\n  sci1: {\n    cable: {\n      cable_user: {\n        GS_SWITCH: \"leuning\",\n        FWSOIL_SWITCH: \"Haverd2013\"\n}\n}\n}\n}\n</code></pre></p> <p>Currently, the default science configurations are defined internally by the following data structure: <pre><code>DEFAULT_SCIENCE_CONFIGURATIONS = {\n    \"sci0\": {\"cable\": {\"cable_user\": {\"GS_SWITCH\": \"medlyn\"}}},\n    \"sci1\": {\"cable\": {\"cable_user\": {\"GS_SWITCH\": \"leuning\"}}},\n    \"sci2\": {\"cable\": {\"cable_user\": {\"FWSOIL_SWITCH\": \"Haverd2013\"}}},\n    \"sci3\": {\"cable\": {\"cable_user\": {\"FWSOIL_SWITCH\": \"standard\"}}},\n    \"sci4\": {\n        \"cable\": {\n            \"cable_user\": {\n                \"GS_SWITCH\": \"medlyn\",\n                \"FWSOIL_SWITCH\": \"Haverd2013\",\n            }\n        }\n    },\n    \"sci5\": {\n        \"cable\": {\n            \"cable_user\": {\n                \"GS_SWITCH\": \"leuning\",\n                \"FWSOIL_SWITCH\": \"Haverd2013\",\n            }\n        }\n    },\n    \"sci6\": {\n        \"cable\": {\n            \"cable_user\": {\n                \"GS_SWITCH\": \"medlyn\",\n                \"FWSOIL_SWITCH\": \"standard\",\n            }\n        }\n    },\n    \"sci7\": {\n        \"cable\": {\n            \"cable_user\": {\n                \"GS_SWITCH\": \"leuning\",\n                \"FWSOIL_SWITCH\": \"standard\",\n            }\n        }\n    },\n}\n</code></pre></p>"}]}